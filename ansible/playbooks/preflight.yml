---
# Ansible playbook that checks if requirements are met

- hosts: all
  gather_facts: true
  become: false  # user may be not added to sudoers
  module_defaults:
    shell:
      executable: /bin/bash
  roles:
    - preflight
  environment:
    KUBECONFIG: "{{ kubeconfig.remote }}"

- name: Add entry to epicli execution history on each host
  hosts: all
  gather_facts: true
  become: true
  become_method: sudo
  vars:
    history_last_entry: {}
    history_other_entries: []
    history_newest_entry:
      version: "{{ epiphany_version }}"
      date: "{{ ansible_date_time.date }} {{ ansible_date_time.time }}"
      mode: "{{ is_upgrade_run | ternary('upgrade', 'apply') }}"
      status: started
  tasks:
    - name: Create epiphany directory if it does not exist
      file:
        path: /var/lib/epiphany
        state: directory
        mode: u=rwx,go=rx

    - name: Get history file status
      stat:
        path: /var/lib/epiphany/history.yml
      register: history_file

    - name: Parse history file
      when:
        - history_file.stat.exists
        - history_file.stat.size > 0
      block:
        - name: Load history file
          slurp:
            src: /var/lib/epiphany/history.yml
          register: history_file_handler

        - name: Parse history file
          set_fact:
            history_latest_entry: "{{ _history_file_yaml.deployments[0] }}"
            history_other_entries: "{{ _history_file_yaml.deployments[1:] }}"
          vars:
            _history_file_yaml: "{{ history_file_handler.content | b64decode | from_yaml }}"

    - name: Check previous status and update if needed
      set_fact:
        history_latest_entry: "{{ history_latest_entry | combine({'status': 'failed'}) }}"
      when:
        - history_latest_entry.status is defined
        - history_latest_entry.status != 'completed'

    - name: Update history and save to file
      copy:
        content: "{{ _new_content | to_nice_yaml(indent=2) }}"
        dest: /var/lib/epiphany/history.yml
      vars:
        _new_content:
          deployments: >-
            {{ [history_new_entry] + history_latest_entry | ternary([history_latest_entry], []) + history_other_entries }}
