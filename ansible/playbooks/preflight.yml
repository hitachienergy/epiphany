---
# Ansible playbook that checks if requirements are met

- hosts: all
  gather_facts: true
  become: false  # user may be not added to sudoers
  module_defaults:
    shell:
      executable: /bin/bash
  roles:
    - preflight
  environment:
    KUBECONFIG: "{{ kubeconfig.remote }}"

- name: Add entry to epicli execution history on each host
  hosts: all
  gather_facts: true
  become: true
  become_method: sudo
  vars:
    history_last_entry: {}
    history_other_entries: []
    history_newest_entry:
        version: "{{ epiphany_version }}"
        date: "{{ ansible_date_time.date }} {{ ansible_date_time.time }}"
        mode: "{{ is_upgrade_run | ternary('upgrade', 'apply') }}"
        state: started
  tasks:
    - name: Create epiphany directory if it does not exist
      file:
        path: /var/lib/epiphany/
        state: directory
        mode: u=rwx,go=rx

    - name: Get history file status
      stat:
        path: /var/lib/epiphany/history.yml
      register: history_file

    - name: Load the history file
      slurp:
        src: /var/lib/epiphany/history.yml
      register: history_file_handler
      when: history_file.stat.exists and history_file.stat.size > 0

    - name: Parse history_file_handler content to yaml format
      set_fact:
        history_last_entry: "{{ history_file_yaml.deployments[0] }}"
        history_other_entries: "{{ history_file_yaml.deployments[1:] }}"
      vars:
        history_file_yaml: "{{ history_file_handler.content | b64decode | from_yaml }}"
      when: history_file.stat.exists and history_file.stat.size > 0

    - name: Check previous state and change it if needed
      set_fact:
        history_last_entry: "{{ history_last_entry | combine({'state': 'failed'})}}"
      when: (history_last_entry) and (history_last_entry.state != 'completed')

    - name: Construct new history file
      set_fact:
        new_history_file: >-
          {{ {'deployments': [history_newest_entry] + history_last_entry | ternary([history_last_entry], []) + history_other_entries} }}

    - name: Save the history file content
      copy:
        content: "{{ new_history_file | to_nice_yaml }}"
        dest: /var/lib/epiphany/history.yml
