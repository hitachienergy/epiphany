---
- name: "Check if Alertmanager is enabled"
  set_fact:
    is_alertmanager_enabled: "{{ specification.alertmanager.enable | bool and (specification.alertmanager.config.receivers | length>0 ) }}"

- name: Check RabbitMQ
  when:
    - groups.rabbitmq is defined
    - groups.rabbitmq | length > 0
  block:
    - name: Load RabbitMQ's config vars
      include_vars:
        file: roles/rabbitmq/vars/main.yml
        name: rabbitmq_config

    - name: Set fact about RabbitMQ monitoring
      set_fact:
        rabbitmq_monitoring_enabled: "{{ rabbitmq_config.specification.rabbitmq_monitoring_enabled }}"

- name: Check HAproxy
  when:
    - groups.haproxy is defined
    - groups.haproxy | length > 0
  block:
    - name: Load HAproxy's config vars
      include_vars:
        file: roles/haproxy/vars/main.yml
        name: haproxy_config

    - name: Set fact about HAproxy monitoring
      set_fact:
        haproxy_monitoring_enabled: "{{ haproxy_config.specification.metrics.enable }}"
        haproxy_monitoring_port: "{{ haproxy_config.specification.metrics.port }}"

- name: Configure prometheus
  template:
    src: "prometheus.yml.j2"
    dest: "{{ specification.config_directory  }}/prometheus.yml"
    force: true
    owner: prometheus
    group: prometheus
    mode: u=rw,g=r,o=
    validate: "/usr/local/bin/promtool check config %s"
  notify:
    - Restart Prometheus

- name: Copy Prometheus custom static targets
  copy:
    src: "{{ item }}"
    dest: "{{ specification.config_directory }}/file_sd/{{ item | splitext | difference(['.yml']) | join('') }}.yml"
    force: true
    owner: prometheus
    group: prometheus
    mode: u=rw,g=r,o=
  with_fileglob:
    - prometheus/targets/*
