---
# General things needed
- name: Include new version default variables
  include_vars:
    file: defaults/main.yml
    name: prometheus_defaults

- name: Populate service facts
  service_facts:
  when: ansible_facts.service is undefined


# Prometheus upgrade
- name: Set prometheus_will_upgrade fact
  set_fact:
    prometheus_will_upgrade: false

- name: Check Prometheus binary existance
  stat:
    path: /usr/local/bin/prometheus
  register: prometheus_stat

- name: Start Prometheus upgrade
  when:
    - ansible_facts.services["prometheus.service"] is defined
    - prometheus_stat.stat.exists
  block:
    - name: Get Prometheus version
      command: prometheus --version
      changed_when: false
      check_mode: false
      register: _prometheus_version

    - name: Set Prometheus version fact
      set_fact:
        prometheus_version: "{{ _prometheus_version[_stream][0].split(' ')[2] }}"
      vars:
        _stream: "{{ 'stdout_lines' if _prometheus_version.stdout_lines else 'stderr_lines' }}"

    - name: Print Prometheus versions
      debug:
        msg:
          - "Installed version: {{ prometheus_version }}"
          - "Target version: {{ prometheus_defaults.prometheus.version }}"

    - name: Check versions and set prometheus_will_upgrade
      set_fact:
        prometheus_will_upgrade: "{{ prometheus_defaults.prometheus.version is version(prometheus_version, '>') }}"

    - name: Stop services
      include_tasks: upgrade/stop-services.yml
      when: prometheus_will_upgrade

    - name: Upgrading Prometheus
      include_tasks: upgrade/upgrade-prometheus.yml
      when: prometheus_will_upgrade


# AlertManager upgrade
- name: Set alertmanager_will_upgrade fact
  set_fact:
    alertmanager_will_upgrade: false

- name: Check binary AlertManager existance
  stat:
    path: /usr/local/bin/alertmanager
  register: alertmanager_stat

- name: Start AlertManager upgrade
  when:
    - ansible_facts.services["alertmanager.service"] is defined
    - alertmanager_stat.stat.exists
  block:
    - name: Get AlertManager version
      command: alertmanager --version
      changed_when: false
      check_mode: false
      register: _alertmanager_version

    - name: Set AlertManager version fact
      set_fact:
        alertmanager_version: "{{ _alertmanager_version[_stream][0].split(' ')[2] }}"
      vars:
        _stream: "{{ 'stdout_lines' if _alertmanager_version.stdout_lines else 'stderr_lines' }}"

    - name: Print AlertManager versions
      debug:
        msg:
          - "Installed version: {{ alertmanager_version }}"
          - "Target version: {{ prometheus_defaults.alertmanager.version }}"

    - name: Check versions and set alertmanager_will_upgrade
      set_fact:
        alertmanager_will_upgrade: "{{ prometheus_defaults.alertmanager.version is version(alertmanager_version, '>') }}"

    - name: Stop services
      include_tasks: upgrade/stop-services.yml
      when: alertmanager_will_upgrade and not prometheus_will_upgrade

    - name: Upgrading AlertManager
      include_tasks: upgrade/upgrade-alertmanager.yml
      when: alertmanager_will_upgrade

# Start services again if needed
- name: Start services
  include_tasks: upgrade/start-services.yml
  when: prometheus_will_upgrade or alertmanager_will_upgrade
