#jinja2: trim_blocks: True, lstrip_blocks: True
# {{ ansible_managed }}
# http://prometheus.io/docs/operating/configuration/

global:
  scrape_interval: {{ specification.scrape_interval }} # 15s
  scrape_timeout: {{ specification.scrape_timeout }} # 10s
  evaluation_interval: {{ specification.evaluation_interval }}
  external_labels:
    {{ prometheus_external_labels | to_nice_yaml(indent=2) | indent(4, False) }}

{% if specification.remote_write != [] %}
remote_write:
  {{ specification.remote_write  }}
{% endif %}

{% if specification.remote_read != [] %}
remote_read:
  {{ specification.remote_read  }}
{% endif %}

rule_files:
  - {{ specification.config_directory }}/rules/*.rules

{% if is_alertmanager_enabled == True %}
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - '{{ ansible_default_ipv4.address }}:9093'
{% endif %}

scrape_configs:
  {% if is_alertmanager_enabled == True %}
  - job_name: alertmanager
    metrics_path: "{{ specification.metrics_path }}"
    static_configs:
      - targets: ['{{ ansible_default_ipv4.address }}:9093']

  {% endif %}
  - job_name: prometheus
    metrics_path: "{{ specification.metrics_path }}"
    static_configs:
      - targets: ['{{ ansible_default_ipv4.address }}:9090']

  - job_name: file_service_discovery
    file_sd_configs:
      - files:
          - "{{ specification.config_directory }}/file_sd/*.yml"

  {% if k8s_as_cloud_service is defined and k8s_as_cloud_service %}
  {#
  Refs:
  - https://github.com/prometheus/prometheus/blob/release-2.31/documentation/examples/prometheus-kubernetes.yml
  - https://prometheus.io/docs/prometheus/2.37/configuration/configuration/#kubernetes_sd_config
  - https://github.com/techiescamp/kubernetes-prometheus/blob/master/config-map.yaml
  - https://devopscube.com/node-exporter-kubernetes/
  #}

  # Scrape config for API servers

  - job_name: 'kubernetes-apiservers'
    bearer_token_file: k8s-token

    kubernetes_sd_configs:
      - role: endpoints
        kubeconfig_file: kubeconfig

    scheme: https
    # Workaround for 'Get "https://10.58.4.4:443/metrics": x509: certificate is valid for 10.96.0.1, not 10.58.4.4':
    tls_config:
      insecure_skip_verify: true

    relabel_configs:
      - source_labels:
          [
            __meta_kubernetes_namespace,
            __meta_kubernetes_service_name,
            __meta_kubernetes_endpoint_port_name,
          ]
        action: keep
        regex: default;kubernetes;https
      # For https://grafana.com/grafana/dashboards/15761-kubernetes-system-api-server/
      - action: replace
        target_label: job
        replacement: apiserver

  # Scrape config for nodes (node-exporter)

  - job_name: 'node-exporter'

    kubernetes_sd_configs:
      - role: endpoints
        kubeconfig_file: kubeconfig

    relabel_configs:
    - source_labels: [__meta_kubernetes_endpoints_name]
      regex: node-exporter
      action: keep
    - source_labels: [__meta_kubernetes_endpoint_node_name, __meta_kubernetes_pod_container_port_number]
      separator: ':'
      target_label: instance

  # Scrape config for nodes (kubelet)

  - job_name: 'kubernetes-nodes'
    bearer_token_file: k8s-token

    kubernetes_sd_configs:
      - role: node
        kubeconfig_file: kubeconfig

    scheme: https
    tls_config:
      insecure_skip_verify: true

    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      # For https://grafana.com/grafana/dashboards/15759-kubernetes-views-nodes/
      - action: replace
        source_labels: [instance]
        target_label: node

  # Scrape config for Kubelet cAdvisor

  - job_name: 'kubernetes-cadvisor'
    bearer_token_file: k8s-token

    metrics_path: /metrics/cadvisor

    kubernetes_sd_configs:
      - role: node
        kubeconfig_file: kubeconfig

    scheme: https
    tls_config:
      insecure_skip_verify: true

    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __metrics_path__
        replacement: /metrics/cadvisor
      # For https://grafana.com/grafana/dashboards/15759-kubernetes-views-nodes/
      - action: replace
        source_labels: [instance]
        target_label: node

  # Scrape config for service endpoints

  - job_name: 'kubernetes-service-endpoints'
    bearer_token_file: k8s-token

    kubernetes_sd_configs:
      - role: endpoints
        kubeconfig_file: kubeconfig

    relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name

  # Scrape config for pods

  - job_name: 'kubernetes-pods'
    bearer_token_file: k8s-token

    kubernetes_sd_configs:
      - role: pod
        kubeconfig_file: kubeconfig

    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name
  {% endif %}

  # Scrape config for Blackbox exporter

  - job_name: blackbox
    metrics_path: /probe
    basic_auth:
      username: '{{ blackbox_exporter_vars.specification.web_config.basic_auth.username }}'
      password: '{{ blackbox_exporter_vars.specification.web_config.basic_auth.password }}'
    params:
      module: [http_2xx_tls_skip_verify]
    static_configs:
    {% if specification.blackbox_exporter_targets %}
      - targets:
      {% for target in specification.blackbox_exporter_targets %}
        - {{ target }}
      {% endfor %}
    {% else %}
      - targets: []
    {% endif %}
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: '{{ ansible_default_ipv4.address }}:9115'

  # Scrape config for Blackbox exporter's metrics

  - job_name: blackbox_exporter
    basic_auth:
      username: '{{ blackbox_exporter_vars.specification.web_config.basic_auth.username }}'
      password: '{{ blackbox_exporter_vars.specification.web_config.basic_auth.password }}'
    static_configs:
      - targets: ['{{ ansible_default_ipv4.address }}:9115']
