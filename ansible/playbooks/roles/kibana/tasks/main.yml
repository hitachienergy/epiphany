---
- name: Install Kibana package
  package:
    name: "{{ _packages[ansible_os_family] }}"
    state: present
  vars:
    _packages:
      Debian:
        - opendistroforelasticsearch-kibana={{ kibana_version[ansible_os_family] }}
      RedHat:
        - opendistroforelasticsearch-kibana-{{ kibana_version[ansible_os_family] }}
  module_defaults:
    yum: { lock_timeout: "{{ yum_lock_timeout }}" }

- name: Include logging configuration tasks
  include_tasks: setup-logging.yml

- name: Load variables from logging/opensearch role
  when: context is undefined or context != "upgrade"
  block:
    - name: Load variables from logging role
      include_vars:
        file: roles/logging/vars/main.yml
        name: opendistro_for_logging_vars
      when: "'logging' in group_names"

    - name: Load variables from opensearch role
      include_vars:
        file: roles/opensearch/vars/main.yml
        name: opendistro_for_data_vars
      when: "'opensearch' in group_names"

- name: Update Kibana configuration file
  template:
    backup: yes
    src: kibana.yml.j2
    dest: /etc/kibana/kibana.yml
    owner: kibana
    group: root
    mode: u=rw,go=
  register: change_config

- name: Restart Kibana service
  systemd:
    name: kibana
    state: restarted
  when: change_config.changed

- name: Start kibana service
  service:
    name: kibana
    state: started
    enabled: yes

- name: Wait for kibana to start listening
  wait_for:
    host: "{{ ansible_default_ipv4.address | default(ansible_all_ipv4_addresses[0]) }}"
    port: 5601
    delay: 5

- name: Wait for Kibana to be ready
  uri:
    url: http://{{ ansible_default_ipv4.address | default(ansible_all_ipv4_addresses[0]) }}:5601/api/status
    method: GET
  register: response
  until: "'kbn_name' in response and response.status == 200"
  retries: 120
  delay: 2
