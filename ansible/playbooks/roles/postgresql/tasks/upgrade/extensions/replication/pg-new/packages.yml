---
# On Ubuntu there is dependent 'repmgr-common' package. Till Epiphany 1.2.0 it was installed in the latest version.
# apt module doesn't support --allow-downgrades (see https://github.com/ansible/ansible/issues/29451)
# so we keep installed version if it's newer.
- name: Set target version for repmgr-common package
  when: ansible_os_family == 'Debian'
  block:
    # Fresh info is needed since repmgr-common migth be re-installed from different repository
    - name: Extensions | repmgr | Refresh information on installed packages
      package_facts:
        manager: auto

    - name: Extensions | repmgr | Set target version for repmgr-common package
      set_fact:
        repmgr_common_target_version: >-
          {{ _installed_version is version(_target_version, '>') | ternary(_installed_version, _target_version + '-*') }}
      vars:
        _installed_version: "{{ ansible_facts.packages['repmgr-common'][0].version }}"
        _target_version: "{{ new_version.repmgr.version.Debian }}"
      when: ansible_facts.packages['repmgr-common'] is defined

- name: Extensions | repmgr | Install package(s) for PostgreSQL {{ new_version.pg.version }}
  package:
    name: "{{ _packages[ansible_os_family] }}"
    state: present
  vars:
    _packages:
      Debian:
        - "{{ new_version.repmgr.package_name.Debian }}={{ new_version.repmgr.version.Debian + '-*' }}"
        - repmgr-common={{ repmgr_common_target_version | default(new_version.repmgr.version.Debian + '-*') }}
      RedHat:
        - "{{ new_version.repmgr.package_name.RedHat }}-{{ new_version.repmgr.version.RedHat }}"
  module_defaults:
    yum: {lock_timeout: "{{ yum_lock_timeout }}"}
