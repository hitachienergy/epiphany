---
- name: Load default variables for k8s nodes
  include_vars:
    file: roles/kubernetes_node/vars/main.yml
    name: kubernetes_node_vars

- name: Set 'enable_controller_attach_detach'
  set_fact:
    spec:
      extensions:
        k8s_worker_nodes_capabilities:
          enable_controller_attach_detach: "{{ kubernetes_node_vars.specification.enable_controller_attach_detach }}"

- name: Union 'k8s_worker_nodes_capabilities' with 'specification'
  set_fact:
    specification: "{{ specification | combine(spec, list_merge='append', recursive=True) }}"

- name: Check kubeadm init
  stat:
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: stat_kube_apiserver_yaml

# TODO ensure there are images in repo - if not, fail

- when: not stat_kube_apiserver_yaml.stat.exists
  block:
    - name: Ensure /etc/kubeadm/ directory exists
      file:
        path: /etc/kubeadm/
        state: directory
        owner: root
        group: root
        mode: u=rw,go=r

    - name: Render kubeadm config
      become: true
      template:
        src: kubeadm-config.yml.j2
        dest: /etc/kubeadm/kubeadm-config.yml
        owner: root
        group: root
        mode: u=rw,go=r

    - name: Initialize Kubernetes cluster
      shell: |
        kubeadm init \
          --config /etc/kubeadm/kubeadm-config.yml
      args:
        executable: /bin/bash

    - name: Mark master as joined
      vars:
        set_fact:
          master_already_joined: true
      set_fact:
        kubernetes_common: >-
          {{ kubernetes_common | default({}) | combine(set_fact, recursive=true) }}

- name: Include kubelet configuration tasks
  include_role:
    name: kubernetes_common
    tasks_from: configure-kubelet

- name: Configure RBAC
  include_tasks: rbac.yml

- name: Configure network policies
  include_tasks: network-policies.yml

- name: Generate Secrets
  include_tasks: generate-cluster-credentials.yml
  when: secret is not defined

- name: Apply network plugin configured by user
  include_tasks: apply-cni-plugin.yml
  vars:
    network_plugin: "{{ specification.advanced.networking.plugin }}"

- name: Patch CoreDNS
  include_tasks: patch-coredns.yml

- name: Restart CoreDNS
  include_tasks: restart-coredns.yml

- name: Apply Kubernetes Dashboard
  include_tasks: apply-dashboard.yml
