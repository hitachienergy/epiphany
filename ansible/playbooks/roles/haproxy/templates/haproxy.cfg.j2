#jinja2: trim_blocks:False
# {{ ansible_managed }}

global
    log stdout format raw local0 notice
    log 127.0.0.1 local1  # Send to rsyslog via 127.0.0.1:514/udp

    stats timeout 30s

    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

    ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

    ssl-dh-param-file /etc/haproxy/dhparam

defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout connect 5000
    timeout client 50000
    timeout server 50000
    {%- if specification is defined and specification.http_request_timeout is defined %}
    timeout http-request {{ specification.http_request_timeout }}
    {%- endif %}

{%- for front in specification.frontend %}
frontend {{ front.name }}
    {%- if front.https is defined and front.https == True %}
    mode tcp
    option tcplog
    bind *:{{ front.port }} ssl {% for cert_name in haproxy_certs_names.files %}crt {{ cert_name.path }} {% endfor %}
    {%- else %}
    bind *:{{ front.port }}
    {%- endif %}

    {%- if (front.domain_backend_mapping is defined) and (front.domain_backend_mapping > 0) %}
    {%- if front.https == True %}
    {%- for mapping in front.domain_backend_mapping %}
    acl {{ mapping.backend }} ssl_fc_sni {{ mapping.domain }}
    {%- endfor %}
    {%- endif %}
    {%- if front.https == False %}
    {%- for mapping in front.domain_backend_mapping %}
    acl {{ mapping.backend }} hdr_dom(host) -i {{ mapping.domain }}
    {%- endfor %}
    {%- endif %}
    {%- endif %}

    {%- if front.backend | length == 1 %}
    default_backend {{ front.backend | first }}
    {%- endif %}
    {%- if front.backend | length > 1 %}
    {%- for back in front.backend %}
    use_backend {{ back }} if {{ back }}
    {%- endfor %}
    {%- endif %}
{%- endfor %}

{%- for back in specification.backend %}
backend {{ back.name }}
    balance roundrobin
    {%- if back.https is defined and back.https == True %}
    option tcp-check
    mode tcp
    {%- endif %}
    {%- if back.server_groups is defined and back.server_groups is subset(groups) %}
    {%- for server_group in back.server_groups %}
    {%- for server in groups[server_group] %}
    {%- if back.https is defined and back.https == True %}
    server {{ server }} {{ hostvars[server].ansible_default_ipv4.address }}:{{ back.port }} check ssl verify none
    {%- else %}
    server {{ server }} {{ hostvars[server].ansible_default_ipv4.address }}:{{ back.port }} check
    {%- endif %}
    {%- endfor %}
    {%- endfor %}
    {%- endif %}

    {%- if back.servers is defined %}
    {%- for server in back.servers %}
    {%- if back.https is defined and back.https == True %}
    server {{ server.name }} {{ server.address }}:{{ back.port }} check ssl verify none
    {%- else %}
    server {{ server.name }} {{ server.address }}:{{ back.port }} check
    {%- endif %}
    {%- endfor %}
    {%- endif %}
{%- endfor %}

{%- if specification.stats is defined and specification.stats.enable == True %}
listen stats
    bind  {{ specification.stats.bind_address }}
    stats enable
    stats refresh 10s
    stats admin if { src 127.0.0.1 }
    stats hide-version  # Hide HAProxy version
    stats uri {{ specification.stats.uri }}
    stats auth {{ specification.stats.user }}:{{ specification.stats.password }}
{%- endif %}
