---

- name: Create node_exporter system group
  group:
    name: node_exporter
    system: true
    state: present

- name: Create node_exporter system user
  user:
    name: node_exporter
    system: true
    shell: "/usr/sbin/nologin"
    group: node_exporter
    createhome: false

- name: Set Node Exporter file name to install
  set_fact:
    exporter_file_name: "{{ exporter.service.file_name[ansible_architecture] }}"

- name: Download Node Exporter binaries
  include_role:
    name: download
    tasks_from: download_file
  vars:
    file_name: "{{ exporter_file_name }}"

- name: Create /opt/node_exporter directories
  file:
    path: "{{ item }}"
    recurse: true
    owner: root
    group: "node_exporter"
    mode: u=rwx,g=rx,o=
    state: directory
  with_items:
    - /opt/node_exporter

- name: Unpack node_exporter binary
  unarchive:
    remote_src: true
    src: "{{ download_directory }}/{{ exporter_file_name }}"
    dest: "/opt/node_exporter"
    creates: "/opt/node_exporter/node_exporter"
    extra_opts: [--strip-components=1]
    mode: u=rwx,g=rx,o=rx
    owner: root
    group: node_exporter
  check_mode: false
  notify:
    - restart prometheus node exporter service

- name: Install node_exporter service to systemd
  template:
    src: prometheus-node-exporter.service.j2
    dest: "/etc/systemd/system/{{ exporter.service.name }}.service"
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  vars:
    exporter_service_description: "{{ exporter.service.description }}"

- name: Configure systemd to use node_exporter service
  systemd:
    daemon_reload: true
    enabled: true
    name: "{{ exporter.service.name }}.service"

- name: Start exporter
  service:
    name: "{{ exporter.service.name }}"
    state: started

- name: Copy file_sd_config to prometheus hosts
  template:
    dest: "{{ specification.config_for_prometheus.prometheus_config_dir }}/file_sd/node-{{ inventory_hostname }}.yml"
    src: file_sd_config.yml.j2
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  delegate_to: "{{ item }}"
  with_inventory_hostnames:
    - prometheus
  notify:
    - restart prometheus on remote servers
