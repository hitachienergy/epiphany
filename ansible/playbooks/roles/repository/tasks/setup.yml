---
- import_tasks: gather-facts.yml

- name: Set mode
  set_fact:
    offline_mode: "{{ offline_requirements | length > 0 }}"

- name: Print mode
  debug:
    var: offline_mode

- name: Set OS name for download script
  set_fact:
    # TODO: test AlmaLinux on Azure & AWS
    download_requirements_os_name: >-
      {{ 'almalinux-8' if (ansible_distribution == 'AlmaLinux' and ansible_distribution_major_version == '8') else
         'redhat-8' if (ansible_distribution == 'RedHat' and ansible_distribution_major_version == '8') else
         'ubuntu-20.04' if (ansible_distribution == 'Ubuntu' and ansible_distribution_version == '20.04') else
         'detect' }}

- name: Download Epiphany requirements on repository host  # online mode
  block:
    - name: Install required packages for repository
      include_tasks: "{{ ansible_os_family }}/install-packages.yml"

    - name: Install Poyo library for YAML support
      pip:
        name: poyo==0.5.0
        executable: pip3
        extra_args: --user

    - name: Create download-requirements directory
      file:
        path: "{{ download_requirements_dir }}"
        state: directory

    - name: Copy files for downloading requirements to repository host
      include_tasks: copy-download-requirements.yml
      vars:
        _arch_type: "{{ ansible_architecture }}"
        _family_type: "{{ ansible_os_family | lower }}"
        _os_type: "{{ download_requirements_os_name }}"

    - name: Make download script executable
      file:
        dest: "{{ download_requirements_script }}"
        mode: a+x

  when:
    - not offline_mode
    - not custom_repository_url
    - inventory_hostname in target_repository_hostnames

- name: Copy repository client configuration scripts
  copy:
    src: client/{{ ansible_os_family }}/
    dest: /var/tmp/epi-repository-setup-scripts
    mode: a+x

- name: Copy repository server configuration scripts
  copy:
    src: server/{{ ansible_os_family }}/
    dest: /var/tmp/epi-repository-setup-scripts
    mode: a+x
  when:
    - not custom_repository_url
    - inventory_hostname in target_repository_hostnames

- include_tasks: check-whether-to-run-download.yml  # sets 'stat_flag_file'
  when:
    - not offline_mode
    - not custom_repository_url
    - inventory_hostname in target_repository_hostnames

- include_tasks: clean-up-epirepo.yml
  when:
    - is_upgrade_run
    - inventory_hostname in target_repository_hostnames
    - custom_repository_url or
      offline_mode or
      not stat_flag_file.stat.exists  # do not clean up when skipping download
  vars:
    # general paths:
    _reqs_dir: download-requirements/requirements
    _arch_dir: "{{ _reqs_dir }}/{{ ansible_architecture }}"
    _distro_dir: "{{ _arch_dir }}/{{ download_requirements_os_name }}"

    # file paths:
    _files_layout:
      distro_files: "{{ _distro_dir }}/files.yml"
      files: "{{ _arch_dir }}/files.yml"

    # contents:
    _files_content:
      distro_files: "{{ lookup('file', _files_layout['distro_files']) | from_yaml }}"
      files: "{{ lookup('file', _files_layout['files']) | from_yaml }}"

- name: |-
    Copy requirements for offline installation to repository host, this can take a long time
    Destination: {{ specification.apache_epirepo_path }}
  copy:
    src: "{{ offline_requirements }}/"
    dest: "{{ specification.apache_epirepo_path }}"
    force: no # if target exists it will skip, default is 'yes'
  when:
    - offline_mode
    - not custom_repository_url
    - inventory_hostname in target_repository_hostnames

# Put it down here as the script download-requirements.sh relies on some files
# in the folder /var/tmp/epi-repository-setup-scripts that until now it should be available
- name: Download Epiphany requirements
  include_tasks: download-requirements.yml
  when:
    - not offline_mode
    - not custom_repository_url
    - inventory_hostname in target_repository_hostnames
    - not stat_flag_file.stat.exists

- name: Set up repositories
  include_tasks: "{{ ansible_os_family }}/setup.yml"

- name: Include Helm repository creation
  include_tasks: "create-helm-repo.yml"
  when: inventory_hostname == target_repository_hostnames[0]
