---
# download-requirements-done.flag file is used to avoid re-downloading requirements (to save time)
# this is to be optimized in the future

- name: |-
    Run download-requirements script, this can take a long time (optimized with manifest)
    You can check progress on repository host with: journalctl -f -t download-requirements.py
  shell: >-
    set -o pipefail &&
    "{{ download_requirements_script }}" \
        /var/www/html/epirepo \
        "{{ download_requirements_os_name }}" \
        --manifest "{{ download_requirements_manifest }}" \
        --no-logfile \
        --repos-backup-file /var/tmp/enabled-system-repos.tar \
        --verbose |&
    tee >(systemd-cat --identifier=download-requirements.py)
  args:
    executable: /bin/bash
  when:
    - not full_download
    - download_requirements_manifest

- name: |-
    Run download-requirements script, this can take a long time
    You can check progress on repository host with: journalctl -f -t download-requirements.py
  shell: >-
    set -o pipefail &&
    "{{ download_requirements_script }}" \
        /var/www/html/epirepo \
        "{{ download_requirements_os_name }}" \
        --no-logfile \
        --repos-backup-file /var/tmp/enabled-system-repos.tar \
        --verbose |&
    tee >(systemd-cat --identifier=download-requirements.py)
  args:
    executable: /bin/bash
  when: full_download or not download_requirements_manifest

- name: Create flag file to not re-download requirements next time
  file:
    path: "{{ download_requirements_flag }}"
    state: touch
