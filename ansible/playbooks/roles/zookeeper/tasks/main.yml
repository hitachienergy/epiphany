---
- name: Create Zookeeper group
  group:
    name: "{{ zookeeper_group }}"
    system: true

- name: Create Zookeeper user
  user:
    name: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
    system: true
    shell: "/usr/sbin/nologin"

- name: Install Java package
  package:
    name: "{{ _packages[ansible_os_family] }}"
    state: present
  vars:
    _packages:
      Debian:
        - openjdk-8-jre-headless
      RedHat:
        - java-1.8.0-openjdk-headless
  module_defaults:
    yum:
      lock_timeout: "{{ yum_lock_timeout }}"

- name: Download and unpack Zookeeper's binary
  include_tasks: common/download_and_unpack_binary.yml

- name: Create directories
  file:
    path: "{{ item }}"
    state: directory
    mode: u=rwx,go=rx
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
  with_items:
    - "{{ zookeeper_data_dir }}"
    - "{{ zookeeper_log_dir }}"
    - "{{ zookeeper_install_dir }}/conf"
    - "/etc/zookeeper/conf"

- name: Check if jmx exporter is available
  stat:
    path: "{{ prometheus_jmx_exporter_path }}"
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: exporter

- name: Create Zookeeper service  # noqa risky-file-permissions (https://github.com/ansible-community/ansible-lint/pull/1030)
  template:
    src: zookeeper.service.j2
    dest: /lib/systemd/system/zookeeper.service
  when: ansible_service_mgr == 'systemd'
  notify:
    - Reload systemctl daemon
    - Restart zookeeper

- name: Set Zookeeper server id
  copy:
    content: "{{ (groups.zookeeper.index(inventory_hostname) + 1) }}\n"
    dest: /var/lib/zookeeper/myid
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
    mode: preserve
  notify: Restart zookeeper

- name: Configure Zookeeper  # noqa risky-file-permissions (https://github.com/ansible-community/ansible-lint/pull/1030)
  template:
    src: zoo.cfg.j2
    dest: "{{ zookeeper_install_dir }}/conf/zoo.cfg"
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
  notify: Restart zookeeper

- name: Link /opt/zookeeper to the right version
  file:
    path: /opt/zookeeper
    state: link
    src: "{{ zookeeper_install_dir }}"

- name: Add Zookeeper's bin dir to the PATH
  copy:
    content: "export PATH=$PATH:/opt/zookeeper/bin"
    dest: "/etc/profile.d/zookeeper_path.sh"
    mode: u=rwx,g=rx,o=rx

- name: Update the log4j config with saner production values  # noqa risky-file-permissions (https://github.com/ansible-community/ansible-lint/pull/1030)
  template:
    src: log4j.properties.j2
    dest: "{{ zookeeper_install_dir }}/conf/log4j.properties"
  notify:
    - Restart zookeeper

- name: Enable and start Zookeeper service
  service:
    name: zookeeper
    enabled: true
    state: started

- include_tasks: metrics.yml
  when: exporter.stat.exists
