---
- name: Include get-server-version from docker role # this sets result
  include_role:
    name: docker
    tasks_from: get-server-version

- name: Print version of Docker server
  debug:
    var: result.stdout

# Check if docker-ce is updatable to conditionally stop kubelet service before update
- name: Check if docker-ce is updatable
  command: >-
    {{ 'dnf check-update docker-ce' if ansible_os_family == 'RedHat' else
       'apt list --upgradable docker-ce' if ansible_os_family == 'Debian' else None }}
  args:
    warn: no
  register: check_docker_update
  failed_when: check_docker_update.rc not in [0, 100] # dnf check-update returns code 100 if there are packages available for update
  changed_when: false

- name: Set is_docker_updatable fact
  set_fact:
    is_docker_updatable: "{{ check_docker_update.stdout is search('docker-ce') }}"

- name: Stop kubelet before Docker update
  systemd:
    state: stopped
    name: kubelet
  when:
    - is_docker_updatable

# Install Docker in current version
- name: Install Docker # this may restart Docker daemon
  import_role:
    name: docker

- name: Include get-server-version from docker role # this sets result
  include_role:
    name: docker
    tasks_from: get-server-version

- name: Print version of Docker server
  debug:
    var: result.stdout

- name: Start kubelet after Docker update
  systemd:
    state: started
    name: kubelet
    daemon_reload: yes
  when:
    - is_docker_updatable
