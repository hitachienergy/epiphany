---
- name: Check current version
  shell: /opt/postgres_exporter/postgres_exporter --version 2>&1 | grep postgres_exporter | awk '{print $3}'
  register: postgres_exporter_current_version

- name: Postgres Exporter | Include defaults from postgres_exporter role
  include_vars:
    file: roles/postgres_exporter/defaults/main.yml
    name: exporter_defaults

- name: Ugrade postgres_exporter
  block:
  - name: Set Postgres Exporter file name to install
    set_fact:
      exporter_file_name: "{{ exporter_defaults.exporter.file_name[ansible_architecture] }}"

  - name: Download Postgres Exporter binaries
    include_role:
      name: download
      tasks_from: download_file
    vars:
      file_name: "{{ exporter_file_name }}"

  - name: Delete old version
    file:
      state: absent
      path: "/opt/postgres_exporter/postgres_exporter"

  - name: Unpack postgres_exporter binary
    become: true
    unarchive:
      remote_src: yes
      src: "{{ download_directory }}/{{ exporter_file_name }}"
      dest: "/opt/postgres_exporter"
      creates: "/opt/postgres_exporter/postgres_exporter"
      extra_opts: [--strip-components=1]
      mode: u=rwx,go=rx
      owner: root
      group: postgres_exporter
    check_mode: false

  - name: Configure systemd to use postgres-exporter service
    systemd:
      daemon_reload: yes
      enabled: yes
      name: postgres-exporter.service

  - name: Start Postgres exporter
    systemd:
      state: started
      name: postgres-exporter.service
  # It looks strange but old and new version has different response syntax for that command :(
  when:
  - (postgres_exporter_current_version.stdout == "(built") or (postgres_exporter_current_version.stdout is version (exporter_defaults.exporter.version, '<'))