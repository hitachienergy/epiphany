---
- name: OpenSearch | Get information about installed packages as facts
  package_facts:
    manager: auto
  when: ansible_facts.packages is undefined

- name: OpenSearch | Assert that elasticsearch-oss package is installed
  assert:
    that: ansible_facts.packages['elasticsearch-oss'] is defined
    fail_msg: elasticsearch-oss package not found, nothing to upgrade
    quiet: true

- name: OpenSearch | Include defaults from OpenSearch role
  include_vars:
    file: roles/opensearch/defaults/main.yml
    name: opensearch_defaults

- name: OpenSearch | Include vars from opensearch role  # requires epicli upgrade -f <manifest>.yml
  include_vars:
    file: roles/opensearch/vars/main.yml
    name: opensearch_vars

- name: OpenSearch | Set the versions of OpenSearch
  include_tasks: roles/opensearch/tasks/set_facts.yml

- name: OpenSearch | Ensure Opensearch service user exists
  user:
    name: "{{ opensearch_vars.specification.opensearch_user }}"
    state: present
    shell: /bin/bash

- name: OpenSearch | Ensure directory structure exists
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ opensearch_vars.specification.opensearch_user }}"
    group: "{{ opensearch_vars.specification.opensearch_user }}"
    mode: u=rw,go=r
    recurse: yes
  with_items:
    - "{{ opensearch_vars.specification.paths.opensearch_home }}"
    - "{{ opensearch_vars.specification.paths.opensearch_log_dir }}"
    - "{{ opensearch_vars.specification.paths.opensearch_conf_dir }}"
    - "{{ opensearch_defaults.certificates.dirs.certs }}"

- name: OpenSearch | Print ElasticSearch ond OpenSearch versions
  debug:
    msg:
      - "Installed version: {{ ansible_facts.packages['elasticsearch-oss'][0].version }}"
      - "Target version: {{ opensearch_ver.split('-')[0] }}"

# If state file exists it means the previous run failed
- name: OpenSearch | Check if upgrade state file exists
  stat:
    path: "{{ opensearch.upgrade_state_file_path }}"
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: stat_upgrade_state_file

- include_role:
    name: upgrade
    tasks_from: opensearch/migrate-odfe
  when: opensearch_vars.specification.odfe_migration
  vars:
    current_group_name: logging

- include_role:
    name: upgrade
    tasks_from: opensearch/migrate-kibana
  when: opensearch_vars.specification.odfe_migration
  vars:
    current_group_name: logging
