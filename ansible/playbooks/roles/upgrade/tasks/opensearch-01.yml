---
- name: OPS | Get information about installed packages as facts
  package_facts:
    manager: auto
  when: ansible_facts.packages is undefined

- name: OPS | Assert that elasticsearch-oss package is installed
  assert:
    that: ansible_facts.packages['elasticsearch-oss'] is defined
    fail_msg: elasticsearch-oss package not found, nothing to upgrade
    quiet: true

- name: OPS | Include defaults from opensearch role
  include_vars:
    file: roles/opensearch/defaults/main.yml
    name: ops_defaults

- name: OPS | Include vars from opensearch role  # requires epicli upgrade -f <manifest>.yml
  include_vars:
    file: roles/opensearch/vars/main.yml
    name: ops_vars

- name: Ensure Opensearch service user exists
  user:
    name: "{{ ops_vars.specification.ops_user }}"
    state: present
    shell: /bin/bash

- name: Ensure directory structure exists
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ops_vars.specification.ops_user }}"
    group: "{{ ops_vars.specification.ops_user }}"
  with_items:
    - "{{ ops_vars.specification.paths.ops_home }}"
    - "{{ ops_vars.specification.paths.ops_log_dir }}"
    - "{{ ops_vars.specification.paths.ops_conf_dir }}"
    - "{{ ops_defaults.certificates.dirs.certs }}"

# TODO: Remove this part of code
# - name: OPS | Patch log4j
#   include_role:
#     name: opensearch
#     tasks_from: patch-log4j
#   when: ops_defaults.log4j_file_name is defined

# - name: Restart elasticsearch service
#   systemd:
#     name: elasticsearch
#     state: restarted
#   register: restart_opensearch
#   when: ops_defaults.log4j_file_name is defined and log4j_patch.changed

- name: OPS | Print elasticsearch ond opensearch versions
  debug:
    msg:
      - "Installed version: {{ ansible_facts.packages['elasticsearch-oss'][0].version }}"
      - "Target version: {{ ops_defaults.versions[ansible_os_family].ops_version }}"

# If state file exists it means the previous run failed
- name: OPS | Check if upgrade state file exists
  stat:
    path: "{{ opensearch.upgrade_state_file_path }}"
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: stat_upgrade_state_file

- name: OPS | Upgrade Elasticsearch and ODFE plugins (part 1/2)
  include_tasks: opensearch/upgrade-opensearch-01.yml
  when:  _target_version is version(ansible_facts.packages['elasticsearch-oss'][0].version, '>')
     or (_target_version is version(ansible_facts.packages['elasticsearch-oss'][0].version, '==')
         and stat_upgrade_state_file.stat.exists)
  vars:
    _target_version: "{{ ops_defaults.versions[ansible_os_family].ops_version }}"

- include_role:
    name: upgrade
    tasks_from: odfe-migration
  when: ops_vars.specification.odfe_migration
  vars:
    current_group_name: logging

- include_role:
    name: upgrade
    tasks_from: kibana-migration
  when: ops_vars.specification.odfe_migration
  vars:
    current_group_name: logging
