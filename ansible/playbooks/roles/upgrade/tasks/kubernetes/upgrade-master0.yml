---
- name: k8s/master0 | Wait for cluster's readiness
  include_tasks: utils/wait.yml

# This resolves issues (related to the etcd encryption) causing upgrades to hang.
# Legacy clusters may have incomplete configs, thus it is corrected here, before any `kubeadm upgrade` command is executed.
# If config is incomplete, kubeadm rewrites the kube-apiserver.yaml manifest file without the etcd feature enabled.
# In turn, this causes Kubernetes components such as the controller-manager to lose ability to read internal (kube-system) secrets, then
# any upgrade attempt freezes and the cluster at hand becomes unusable.
- name: k8s/master0 | Make sure the apiserver settings are correct
  include_tasks: patch-kubeadm-apiserver.yml

- name: k8s/master0 | Update imageRepository in kubeadm-config ConfigMap
  include_tasks: patch-kubeadm-image-repository.yml

- name: k8s/master0 | Reconfigure rabbitmq application
  include_tasks: reconfigure-rabbitmq-app.yml

- name: k8s/master0 | Reconfigure keycloak application
  include_tasks: reconfigure-auth-service-app.yml

- name: k8s/master0 | Drain master in preparation for maintenance
  include_tasks: utils/drain.yml

- name: Upgrade packages and perform upgrade
  block:
    - name: k8s/master0 | Install kubeadm
      include_tasks: "{{ ansible_os_family }}/install-kubeadm.yml"

    # Note: Usage of the --config flag for reconfiguring the cluster during upgrade is not recommended since v1.16
    - name: k8s/master0 | Validate whether cluster is upgradeable
      command: >-
        kubeadm upgrade plan v{{ version }}
      register: result
      until:
        - result is succeeded
      retries: 20
      delay: 30
      changed_when: false

    - name: k8s/master0 | Add k8s annotation for containerd
      delegate_to: "{{ groups.kubernetes_master[0] }}"
      run_once: true
      command: >-
        kubectl annotate node {{ inventory_hostname }} --overwrite kubeadm.alpha.kubernetes.io/cri-socket=unix:///run/containerd/containerd.sock

    # Note: Usage of the --config flag for reconfiguring the cluster during upgrade is not recommended since v1.16
    - name: k8s/master0 | Upgrade K8s cluster to v{{ version }}
      command: >-
        kubeadm upgrade apply -y v{{ version }}
      register: result
      until:
        - result is succeeded
      retries: 20
      delay: 30
      changed_when: false
      when:
        - cluster_version is version('v' + version, '<')

    - name: Install kubelet and kubectl for {{ version }}
      include_tasks: >-
        {{ ansible_os_family }}/install-packages.yml
      when:
        - result is succeeded

- name: k8s/master0 | Wait for cluster's readiness
  include_tasks: utils/wait.yml

# 'kubeadm upgrade apply' overwrites Epiphany's customized CoreDNS so we patch it again.
# This task restores 'hosts' plugin and should be run each time K8s was upgraded in order to support "--wait-for-pods" epicli feature (issue #1218).
- name: k8s/master0 | Customize CoreDNS
  include_tasks: upgrade-coredns.yml

- name: Upgrade CNI plugin (deployment then local pod)
  when:
    - upgrade_to_final_version
  block:
    - name: k8s/master0 | Upgrade CNI plugin deployment
      include_tasks: upgrade-cni-plugin-deployment.yml

    - name: k8s/master0 | Upgrade CNI plugin pod
      include_tasks: upgrade-cni-plugin-pod.yml

- name: k8s/master0 | Backup kubeadm-config.yml
  include_tasks: backup-kubeadm-config.yml

- name: k8s/master0 | Patch kubelet ConfigMap with systemd cgroup driver
  include_tasks: patch-kubelet-cm.yml

- name: k8s/master0 | Replace cgroupfs driver with systemd driver
  include_tasks: patch-cgroup-driver.yml
  vars: { _requires_restart: false }  # it will be properly restarted anyways
  when:
    - upgrade_to_final_version

- name: k8s/master0 | Restart kubelet
  include_tasks: utils/restart-kubelet.yml

- name: k8s/master0 | Uncordon master - mark master as schedulable
  include_tasks: utils/uncordon.yml

- name: k8s/master0 | Verify component versions and node status
  include_tasks: kubernetes/verify-upgrade.yml
