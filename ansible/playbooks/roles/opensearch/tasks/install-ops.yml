---
- name: Download Opensearch
  include_role:
    name: download
    tasks_from: download_file
  vars:
    file_name: "{{ item }}"
  with_items:
    - "opensearch-{{ versions[ansible_os_family].ops_version }}-linux-x64.tar.gz"
    - "opensearch-perf-top-{{ versions[ansible_os_family].ops_perftop_version }}-linux-x64.zip"

- name: Ensure Opensearch service user exists
  user:
    name: "{{ specification.ops_user }}"
    state: present
    shell: /bin/bash

- name: Ensure directory structure exists
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ specification.ops_user }}"
    group: "{{ specification.ops_user }}"
  with_items:
    - "{{ specification.paths.ops_home }}"
    - "{{ specification.paths.ops_perftop_home }}"
    - "{{ specification.paths.ops_log_dir }}"
    - "{{ specification.paths.ops_conf_dir }}"
    - "{{ specification.paths.ops_data }}"
    - "{{ specification.paths.ops_logs }}"
    - "{{ certificates.dirs.certs }}"

- name: Extract the OPS tar file
  unarchive:
    src: "/tmp/opensearch-{{ versions[ansible_os_family].ops_version }}-linux-x64.tar.gz"
    dest: "{{ specification.paths.ops_home }}"
    owner: "{{ specification.ops_user }}"
    remote_src: yes
    extra_opts:
    - --strip-components=1

- name: Extract OPS PerfTop the tar file
  unarchive:
    src: "/tmp/opensearch-perf-top-{{ versions[ansible_os_family].ops_perftop_version }}-linux-x64.zip"
    dest: "{{ specification.paths.ops_perftop_home }}"
    owner: "{{ specification.ops_user }}"
    remote_src: yes

- name: Create systemd service
  template:
    src: roles/opensearch/templates/opensearch.service.j2
    dest: "{{ systemctl_path }}/opensearch.service"
