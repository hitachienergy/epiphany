#####################################################
# DO NOT Modify by hand - Managed by Automation
#####################################################
#####################################################
# This file can be used as a base template to build other Terraform files. It attempts to use as much
# Terraform interpolation as possible by creating Terraform variables instead of changing inline
# this approach provides an easier way to do creative looping, fetch IDs of created resources etc.
#####################################################
#####################################################
# {{ specification.name }}
#####################################################

resource "aws_instance" "{{ specification.name }}" {
  ami                         = "{{ specification.image_id }}"
  instance_type               = "{{ specification.size }}"
  associate_public_ip_address = "{{ specification.associate_public_ip | lower  }}"
  key_name                    = "{{ specification.key_name }}"
  subnet_id                   = aws_subnet.{{ specification.subnet_name }}.id
  {%- if specification.use_network_security_groups == true %}
  vpc_security_group_ids      = [{% for security_group in specification.security_groups %}aws_security_group.{{ security_group }}.id{% if not loop.last %}, {% endif %}{% endfor %}]
  {%- endif %}

  # storage
  ebs_optimized = "{{ specification.ebs_optimized | lower }}"
  root_block_device {
    volume_type           = "{{ specification.disks.root.volume_type }}"
    volume_size           = "{{ specification.disks.root.volume_size }}"
    delete_on_termination = "{{ specification.disks.root.delete_on_termination | lower }}"
    encrypted             = "{{ specification.disks.root.encrypted | lower }}"
    tags = {
      cluster_name        = "{{ specification.cluster_name }}"
      cluster_version     = "{{ version }}"
      Name                = "{{ specification.name }}-os-volume"
    }
  }

{% for disk in specification.disks.additional_disks %}
  ebs_block_device {
    device_name           = "{{ disk.device_name }}"
    volume_type           = "{{ disk.volume_type }}"
    volume_size           = "{{ disk.volume_size }}"
    encrypted             = "{{ disk.encrypted | lower }}"
    delete_on_termination = "{{ disk.delete_on_termination | lower }}"

    tags = {
      cluster_name        = "{{ specification.cluster_name }}"
      cluster_version     = "{{ version }}"
      Name                = "{{ specification.name }}-{{ disk.name }}}"
    }
  }
{%- endfor %}

  tags = {
    cluster_name    = "{{ specification.cluster_name }}"
    cluster_version = "{{ version }}"
    component_key   = "{{ specification.component_key }}"
    Name            = "{{ specification.name }}"
  }
}
