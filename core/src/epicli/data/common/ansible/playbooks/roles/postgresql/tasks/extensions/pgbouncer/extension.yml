---
- name: Extensions | configure PgBouncer
  when: groups.postgresql[0] == inventory_hostname
  block:
    - name: Extensions | PgBouncer | Ensure that systemd service is started
      systemd:
        name: pgbouncer
        state: started

    - name: Extensions | PgBouncer | Copy configuration files
      vars:
        _files:
          - pgbouncer.ini
          - userlist.txt
      template:
        src: "{{ file_name }}.j2"
        dest: "{{ pgbouncer.base_dir }}/{{ file_name }}"
        owner: "{{ pgbouncer.user[ansible_os_family] }}"
        group: "{{ pgbouncer.group[ansible_os_family] }}"
        mode: u=rw,g=,o=
        backup: true
      loop_control:
        loop_var: file_name
      loop: "{{ _files }}"
      register: change_pgbouncer_config

    - name: Extensions | PgBouncer | Create logrotate configuration file
      template:
        src: logrotate-pgbouncer.conf.j2
        dest: /etc/logrotate.d/pgbouncer
        owner: root
        group: root
        mode: u=rw,go=r

    - name: Extensions | PgBouncer | Restart systemd service
      when: (change_pgbouncer_config.results | map(attribute='changed') | list) is any
      systemd:
        name: pgbouncer
        state: restarted

    - name: Extensions | PgBouncer | Ensure that systemd service is enabled
      systemd:
        name: pgbouncer
        enabled: true
