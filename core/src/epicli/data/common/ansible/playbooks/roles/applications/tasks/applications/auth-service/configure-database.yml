---
- name: Auth-service | Create database & database user
  block:
    - name: Auth-service | Grab Postgresql cluster in_recovery_state
      delegate_to: "{{ item }}"
      become_user: postgres
      become: true
      postgresql_info:
        filter: in_recovery
      register: in_recovery_state
      with_items:
        - "{{ groups['postgresql'] }}"

    - name: Auth-service | Set Postgres primary node
      set_fact:
        postgres_primary: "{{ item.item }}"
      with_items: "{{ in_recovery_state.results }}"
      when: item.in_recovery == false

    - name: Auth-service | Create database for Epiphany Auth Service
      delegate_to: "{{ _primary_node }}"
      become: true
      become_user: postgres
      postgresql_db:
        name: "{{ data.database.name }}"

    - name: Auth-service | Add Postresql user
      delegate_to: "{{ _primary_node }}"
      become: true
      become_user: postgres
      postgresql_user:
        db: "{{ data.database.name }}"
        name: "{{ data.database.user }}"
        password: "{{ data.database.password }}"
        role_attr_flags: CREATEDB,NOSUPERUSER
        expires: infinity

  vars:
      _primary_node: >-
        {{ groups['postgresql'] | first if (groups.postgresql | length == 1) else postgres_primary }}
