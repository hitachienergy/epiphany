---
- name: Auth-service | Include application vars from application role
  include_vars:
    file: roles/applications/vars/main.yml
    name: applications

- name: Auth-service | Execute if Postgresql is not standalone instance
  run_once: true
  delegate_to: localhost
  when:
    - groups.postgresql is defined
    - groups.postgresql | length > 1
  block:
    # Fail if there are 2+ Postgresql instances and Pgbouncer is disabled
    - name: Auth-service | Ensure that Pgbouncer is enabled
      assert:
        that: "{{ _pgbouncer_status }}"
        fail_msg: Pgbouncer disabled
        success_msg: Pgbouncer enabled

    - name: Auth-service | Set database address if PostgreSQL is not standalone instance
      set_fact:
        auth_service_db_address: "pgbouncer.postgres-pool.svc.cluster.local"
  vars:
    _statuses: >-
      {{ applications.specification.applications | items2dict(key_name='name', value_name='enabled') }}
    _pgbouncer_status: >-
      {{ _statuses['pgbouncer'] }}

- name: Auth-service | Set database address if PostgreSQL is standalone instance
  set_fact:
    auth_service_db_address: "{{ hostvars[groups.postgresql[0]].ansible_default_ipv4.address }}"
  when:
    - groups.postgresql is defined
    - groups.postgresql | length == 1

- name: Auth-service | Set database address if custom database address is provided
  set_fact:
    auth_service_db_address: "{{ data.database.address }}"
  when:
    - data.database.address is defined

- name: Auth-service | Set database port
  set_fact:
    auth_service_db_port: "{{ data.database.port | default(postgresql_database_port) }}"

- name: Auth-service | Set namespace name
  set_fact:
    namespace_name: "{{ data.service.namespace | default(default_namespace) | lower }}" # Kubernetes (as of v1.11) accepts only lowercase namespace names.

- name: Auth-service | Set service name
  set_fact:
    auth_service_name: "{{ data.service.name | default('as-' + namespace_name) | lower }}" # Kubernetes (as of v1.11) accepts only lowercase service names.
