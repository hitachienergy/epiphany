---
- name: PostgreSQL checks
  run_once: true
  delegate_to: localhost
  block:
    - name: Include postgresql vars from postgresql role
      include_vars:
        file: roles/postgresql/vars/main.yml
        name: postgresql

    - name: Check if PostgreSQL extensions are supported for the architecture
      assert:
        that: _unsupported_enabled_extensions | length == 0
        fail_msg: >-
          {{ _unsupported_enabled_extensions | map(attribute='name') | list | join(', ') }} extensions are not supported
            for {{ _pg_arch }} and cannot be installed
        success_msg: "All enabled PostgreSQL extensions are supported for current architecture"
      vars:
        _pg_arch: >-
          {{ hostvars[groups['postgresql'][0]]['ansible_architecture'] }}
        _defined: >-
          {{ postgresql.specification.extensions
            | dict2items(key_name='name', value_name='config')
            | selectattr('config.enabled', 'defined')
            | list }}
        _undefined: >-
          {{ postgresql.specification.extensions
            | dict2items(key_name='name', value_name='config')
            | selectattr('config.enabled', 'undefined')
            | list }}
        _enabled_extensions: >-
          {{ (_defined | selectattr('config.enabled') | list) + _undefined }}
        _unsupported_enabled_extensions: >-
          {{ _enabled_extensions | selectattr('name', 'in', unsupported_postgres_extensions[_pg_arch]) | list }}

    - name: Check PostgreSQL password encryption support for applications
      block:
        - name: Include applications vars from applications role
          include_vars:
            file: roles/applications/vars/main.yml
            name: applications_role_config

        - name: Read and assert applications configuration
          when: k8s_pgpool.keys()|length > 0 or k8s_pgbouncer.keys()|length > 0
          assert:
            that: postgresql.specification.configuration.password_encryption == "md5"
            fail_msg: >-
              {{ postgresql.specification.configuration.password_encryption }} password encryption is not supported with PostgreSQL HA configuration,
              please use "md5" password encryption.
          vars:
            k8s_pgpool: >-
              {{ applications_role_config.specification.applications | default([])
                                                                    | selectattr("name", "equalto", "pgpool")
                                                                    | selectattr('enabled')
                                                                    | map(attribute='pgpool')
                                                                    | list
                                                                    | first
                                                                    | default({}) }}
            k8s_pgbouncer: >-
              {{ applications_role_config.specification.applications | default([])
                                                                    | selectattr("name", "equalto", "pgbouncer")
                                                                    | selectattr('enabled')
                                                                    | map(attribute='pgbouncer')
                                                                    | list
                                                                    | first
                                                                    | default({}) }}
