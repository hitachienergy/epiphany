---
kind: configuration/rook
title: "Kubernetes Rook Config"
name: default
specification:
  rook_namespace: rook-ceph
  enabled: false
  operator_chart_values:
    image:
      repository: rook/ceph
      tag: VERSION
      pullPolicy: IfNotPresent
    crds:
      enabled: true
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
    nodeSelector: {}
    tolerations: []
    unreachableNodeTolerationSeconds: 5
    currentNamespaceOnly: false
    annotations: {}
    logLevel: INFO
    rbacEnable: true
    pspEnable: true
    csi:
      enableRbdDriver: true
      enableCephfsDriver: true
      enableGrpcMetrics: false
      enableCephfsSnapshotter: true
      enableRBDSnapshotter: true
      enablePluginSelinuxHostMount : false
      rbdFSGroupPolicy: "ReadWriteOnceWithFSType"
      cephFSFSGroupPolicy: "ReadWriteOnceWithFSType"
      enableOMAPGenerator: false
      provisionerReplicas: 2
      allowUnsupportedVersion: false
      csiRBDProvisionerResource: |
        - name : csi-provisioner
          resource:
            requests:
              memory: 128Mi
              cpu: 100m
            limits:
              memory: 256Mi
              cpu: 200m
        - name : csi-resizer
          resource:
            requests:
              memory: 128Mi
              cpu: 100m
            limits:
              memory: 256Mi
              cpu: 200m
        - name : csi-attacher
          resource:
            requests:
              memory: 128Mi
              cpu: 100m
            limits:
              memory: 256Mi
              cpu: 200m
        - name : csi-snapshotter
          resource:
            requests:
              memory: 128Mi
              cpu: 100m
            limits:
              memory: 256Mi
              cpu: 200m
        - name : csi-rbdplugin
          resource:
            requests:
              memory: 512Mi
              cpu: 250m
            limits:
              memory: 1Gi
              cpu: 500m
        - name : liveness-prometheus
          resource:
            requests:
              memory: 128Mi
              cpu: 50m
            limits:
              memory: 256Mi
              cpu: 100m
      csiRBDPluginResource: |
        - name : driver-registrar
          resource:
            requests:
              memory: 128Mi
              cpu: 50m
            limits:
              memory: 256Mi
              cpu: 100m
        - name : csi-rbdplugin
          resource:
            requests:
              memory: 512Mi
              cpu: 250m
            limits:
              memory: 1Gi
              cpu: 500m
        - name : liveness-prometheus
          resource:
            requests:
              memory: 128Mi
              cpu: 50m
            limits:
              memory: 256Mi
              cpu: 100m
      csiCephFSProvisionerResource: |
        - name : csi-provisioner
          resource:
            requests:
              memory: 128Mi
              cpu: 100m
            limits:
              memory: 256Mi
              cpu: 200m
        - name : csi-resizer
          resource:
            requests:
              memory: 128Mi
              cpu: 100m
            limits:
              memory: 256Mi
              cpu: 200m
        - name : csi-attacher
          resource:
            requests:
              memory: 128Mi
              cpu: 100m
            limits:
              memory: 256Mi
              cpu: 200m
        - name : csi-cephfsplugin
          resource:
            requests:
              memory: 512Mi
              cpu: 250m
            limits:
              memory: 1Gi
              cpu: 500m
        - name : liveness-prometheus
          resource:
            requests:
              memory: 128Mi
              cpu: 50m
            limits:
              memory: 256Mi
              cpu: 100m
      csiCephFSPluginResource: |
        - name : driver-registrar
          resource:
            requests:
              memory: 128Mi
              cpu: 50m
            limits:
              memory: 256Mi
              cpu: 100m
        - name : csi-cephfsplugin
          resource:
            requests:
              memory: 512Mi
              cpu: 250m
            limits:
              memory: 1Gi
              cpu: 500m
        - name : liveness-prometheus
          resource:
            requests:
              memory: 128Mi
              cpu: 50m
            limits:
              memory: 256Mi
              cpu: 100m
      forceCephFSKernelClient: true
      volumeReplication:
        enabled: false
      csiAddons:
        enabled: false
    enableDiscoveryDaemon: false
    cephCommandsTimeoutSeconds: "15"
    enableSelinuxRelabeling: true
    hostpathRequiresPrivileged: false
    disableDeviceHotplug: false
    discoverDaemonUdev:
    enableOBCWatchOperatorNamespace: true
    admissionController:
    monitoring:
      enabled: false
  cluster_chart_values:
    operatorNamespace: rook-ceph
    toolbox:
      enabled: false
      image: rook/ceph:VERSION
      tolerations: []
      affinity: {}
      resources:
        limits:
          cpu: "500m"
          memory: "1Gi"
        requests:
          cpu: "100m"
          memory: "128Mi"
    monitoring:
      enabled: false
      createPrometheusRules: false
      rulesNamespaceOverride:
    pspEnable: true
    cephClusterSpec:
      cephVersion:
        image: quay.io/ceph/ceph:v16.2.7
        allowUnsupported: false
      dataDirHostPath: /var/lib/rook
      skipUpgradeChecks: false
      continueUpgradeAfterChecksEvenIfNotHealthy: false
      waitTimeoutForHealthyOSDInMinutes: 10
      mon:
        count: 3
        allowMultiplePerNode: false
      mgr:
        count: 2
        allowMultiplePerNode: false
        modules:
          - name: pg_autoscaler
            enabled: true
      dashboard:
        enabled: true
        ssl: true
      crashCollector:
        disable: false
      cleanupPolicy:
        confirmation: ""
        sanitizeDisks:
          method: quick
          dataSource: zero
          iteration: 1
        allowUninstallWithVolumes: false
      resources:
        mgr:
          limits:
            cpu: "1000m"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        mon:
          limits:
            cpu: "2000m"
            memory: "2Gi"
          requests:
            cpu: "1000m"
            memory: "1Gi"
        osd:
          limits:
            cpu: "2000m"
            memory: "4Gi"
          requests:
            cpu: "1000m"
            memory: "4Gi"
        prepareosd:
          limits:
            cpu: "500m"
            memory: "200Mi"
          requests:
            cpu: "500m"
            memory: "50Mi"
        mgr-sidecar:
          limits:
            cpu: "500m"
            memory: "100Mi"
          requests:
            cpu: "100m"
            memory: "40Mi"
        crashcollector:
          limits:
            cpu: "500m"
            memory: "60Mi"
          requests:
            cpu: "100m"
            memory: "60Mi"
        logcollector:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "100m"
            memory: "100Mi"
        cleanup:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "100Mi"
      removeOSDsIfOutAndSafeToRemove: false
      storage: # cluster level storage configuration and selection
        useAllNodes: true
        useAllDevices: true
      disruptionManagement:
        managePodBudgets: true
        osdMaintenanceTimeout: 30
        pgHealthCheckTimeout: 0
        manageMachineDisruptionBudgets: false
        machineDisruptionBudgetNamespace: openshift-machine-api
      healthCheck:
        daemonHealth:
          mon:
            disabled: false
            interval: 45s
          osd:
            disabled: false
            interval: 60s
          status:
            disabled: false
            interval: 60s
        livenessProbe:
          mon:
            disabled: false
          mgr:
            disabled: false
          osd:
            disabled: false
    ingress:
      dashboard: {}
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          mountOptions: []
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              name: data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              limits:
                cpu: "2000m"
                memory: "4Gi"
              requests:
                cpu: "1000m"
                memory: "4Gi"
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          mountOptions: []
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephFileSystemVolumeSnapshotClass:
      enabled: false
      name: ceph-filesystem
      isDefault: true
      deletionPolicy: Delete
      annotations: {}
      labels: {}
      parameters: {}
    cephBlockPoolsVolumeSnapshotClass:
      enabled: false
      name: ceph-block
      isDefault: false
      deletionPolicy: Delete
      annotations: {}
      labels: {}
      parameters: {}
    cephObjectStores:
      - name: ceph-objectstore
        spec:
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          dataPool:
            failureDomain: host
            erasureCoded:
              dataChunks: 2
              codingChunks: 1
          preservePoolsOnDelete: true
          gateway:
            port: 80
            resources:
              limits:
                cpu: "2000m"
                memory: "2Gi"
              requests:
                cpu: "1000m"
                memory: "1Gi"
            instances: 1
          healthCheck:
            bucket:
              interval: 60s
        storageClass:
          enabled: true
          name: ceph-bucket
          reclaimPolicy: Delete
          parameters:
            region: us-east-1
