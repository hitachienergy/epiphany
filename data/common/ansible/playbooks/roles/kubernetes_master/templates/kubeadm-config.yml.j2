apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
kubernetesVersion: v{{ specification.version }}
clusterName: "{{ specification.cluster_name }}"

{% if use_ha_control_plane %}
controlPlaneEndpoint: "localhost:3446"
{% endif %}

apiServer:
  timeoutForControlPlane: 4m0s
  certSANs:
{% set ip_address_list = ['127.0.0.1', 'localhost'] %}
{% for host in groups['kubernetes_master'] %}
{%   set _ = ip_address_list.extend([ hostvars[host]['ansible_default_ipv4']['address'], hostvars[host]['ansible_host'] ]) %}
{% endfor %}
{% for ip in ip_address_list|unique %}
    - {{ ip }}
{% endfor %}
  extraArgs: # https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
{% if specification.advanced.etcd_args.encrypted | bool %}
    encryption-provider-config: /etc/kubernetes/pki/etcd/etc-encryption.conf
{% endif %}
{% for key, value in specification.advanced.api_server_args.items() %}
    {{ key }}: "{{ value }}"
{% endfor %}

controllerManager:
  extraArgs: # https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/
{% for key, value in specification.advanced.controller_manager_args.items() %}
    {{ key }}: "{{ value }}"
{% endfor %}

scheduler:
  extraArgs: # https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler/
{% for key, value in specification.advanced.scheduler_args.items() %}
    {{ key }}: "{{ value }}"
{% endfor %}

networking:
  dnsDomain: {{ specification.advanced.networking.dnsDomain }}
  podSubnet: "10.244.0.0/16"
  serviceSubnet: {{ specification.advanced.networking.serviceSubnet }}

imageRepository: {{ image_registry_address }}/{{ specification.advanced.imageRepository }}

certificatesDir: {{ specification.advanced.certificates.location }}
