---
- name: Create kafka_exporter system group
  group:
    name: kafka_exporter
    system: true
    state: present

- name: Create kafka_exporter system user
  user:
    name: kafka_exporter
    system: true
    shell: "/usr/sbin/nologin"
    group: kafka_exporter
    createhome: false

- name: Set Kafka Exporter file name to install
  set_fact:
    exporter_file_name: "{{ kafka_exporter.file_name[ansible_architecture] }}"

- name: Download Kafka Exporter binaries
  include_role:
    name: download
    tasks_from: download_file
  vars:
    file_name: "{{ exporter_file_name }}"

- name: Create /opt/kafka_exporter directory
  become: yes
  file:
    path: "{{ item }}"
    recurse: yes
    owner: root
    group: kafka_exporter
    mode: 0750
    state: directory
  with_items:
  - /opt/kafka_exporter

- name: Unpack kafka_exporter binary
  become: true
  unarchive:
    remote_src: yes
    src: "{{ download_directory }}/{{ exporter_file_name }}"
    dest: "/opt/kafka_exporter"
    creates: "/opt/kafka_exporter/kafka_exporter"
    extra_opts: [--strip-components=1]
    mode: 0755
    owner: root
    group: kafka_exporter
  check_mode: false
  notify:
    - restart kafka-exporter

- name: Install kafka_exporter service to systemd
  template:
    src: kafka-exporter.service.j2
    dest: /etc/systemd/system/kafka-exporter.service
    owner: root
    group: root
    mode: 0644

- name: Configure systemd to use kafka-exporter service
  systemd:
    daemon_reload: yes
    enabled: yes
    name: kafka-exporter.service

- name: Start Kafka exporter
  service:
    name: kafka-exporter
    state: started

- name: Copy file_sd_config to prometheus hosts
  template:
    dest: "{{ specification.config_for_prometheus.prometheus_config_dir }}/file_sd/kafka-exporter-{{ inventory_hostname }}.yml"
    src: file_sd_config.yml.j2
    owner: root
    group: root
    mode: 0644
  delegate_to: "{{ item }}"
  with_inventory_hostnames:
    - prometheus
  notify: restart prometheus on remote servers
