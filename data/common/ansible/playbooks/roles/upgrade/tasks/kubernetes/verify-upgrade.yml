---
- name: k8s/verify | Verify cluster versions
  environment:
    KUBECONFIG: /etc/kubernetes/kubelet.conf
  block:
    - name: k8s/verify | Verify cluster version
      when:
        - inventory_hostname in groups.kubernetes_master
      block:
        - name: k8s/verify | Include wait-for-kube-apiserver.yml
          include_tasks: utils/wait-for-kube-apiserver.yml

        - name: k8s/verify | Include get-cluster-version.yml
          include_tasks: get-cluster-version.yml  # sets cluster_version

        - name: k8s/verify | Verify cluster version
          assert:
            that: version in cluster_version

    - name: k8s/verify | Verify kubectl version
      block:
        - name: k8s/verify | Get kubectl version
          command: kubectl version --client --short
          register: kubectl_version
          changed_when: false

        - name: k8s/verify | Verify kubectl version
          assert:
            that: version in kubectl_version.stdout

    - name: k8s/verify | Verify kubeadm version
      block:
        - name: k8s/verify | Get kubeadm version
          command: >-
            kubeadm version -o short
          register: kubeadm_version
          changed_when: false

        - name: k8s/verify | Verify kubeadm version
          assert:
            that: version in kubeadm_version.stdout

    - name: k8s/verify | Verify kubelet version from API server and get node status
      run_once: true
      shell: |-
        set -o pipefail &&
        kubectl get nodes {{ inventory_hostname }} |
        # get values only for STATUS and VERSION columns, example output: 'Ready v1.14.6'
        awk 'NR==1 { for (col=1; col<=NF; col++) { columns[$col] = col } };
             NR>1  { print $columns["STATUS"], $columns["VERSION"] }'
      register: node_status_and_version
      until:
        - version in node_status_and_version.stdout
      retries: 30 # 1min
      delay: 2
      args:
        executable: /bin/bash
      changed_when: false

    - name: k8s/verify | Verify node status
      assert:
        that: "'Ready' in node_status_and_version.stdout"
