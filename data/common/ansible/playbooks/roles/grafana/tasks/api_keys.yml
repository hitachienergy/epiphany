---
- name: Ensure grafana key directory exists
  delegate_to: localhost
  become: false
  file:
    path: "{{ grafana_api_keys_dir }}/{{ inventory_hostname }}"
    state: directory
    mode: u=rwx,go=

- name: Check api key list
  uri:
    url: "{{ grafana_api_url }}/api/auth/keys"
    user: "{{ grafana_security.admin_user }}"
    password: "{{ grafana_security.admin_password }}"
    force_basic_auth: true
    return_content: true
  register: existing_api_keys
  no_log: true

- name: Create grafana api keys
  uri:
    url: "{{ grafana_api_url }}/api/auth/keys"
    user: "{{ grafana_security.admin_user }}"
    password: "{{ grafana_security.admin_password }}"
    force_basic_auth: true
    method: POST
    body_format: json
    body: "{{ item | to_json }}"
  when: existing_api_keys.json | selectattr('name', '==', item.name) | length == 0
  loop: "{{ grafana_api_keys }}"
  register: new_api_keys
  no_log: true

- name: Create api keys file to allow the keys to be seen and used by other automation
  delegate_to: localhost
  become: false
  copy:
    dest: "{{ grafana_api_keys_dir }}/{{ inventory_hostname }}/{{ item.item.name }}.key"
    content: "{{ item.json.key }}"
    backup: false
    mode: u=rw,go=
  when: item.json is defined
  loop: "{{ new_api_keys.results }}"
