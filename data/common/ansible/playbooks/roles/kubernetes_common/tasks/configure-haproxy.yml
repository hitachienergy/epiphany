---
- name: Prepare backend configuration for HAProxy
  set_fact:
    kubernetes_common: >-
      {{ kubernetes_common | default({}) | combine(set_fact, recursive=true) }}
  vars:
    set_fact:
      haproxy_master_names: >-
        {{ groups.kubernetes_master
        | map('extract', hostvars, ['inventory_hostname'])
        | list }}
      haproxy_master_ipv4s: >-
        {{ groups.kubernetes_master
        | map('extract', hostvars, ['ansible_default_ipv4', 'address'])
        | list }}

- name: Prepare backend configuration for HAProxy
  set_fact:
    kubernetes_common: >-
      {{ kubernetes_common | default({}) | combine(set_fact, recursive=true) }}
  vars:
    set_fact:
      haproxy_backend_servers: >-
        {{ kubernetes_common.haproxy_master_names | zip(kubernetes_common.haproxy_master_ipv4s) | list }}

- name: Configure and start haproxy "distributed" load-balancer
  vars: { haproxy_service: haproxy-k8s }
  block:
    - name: Ensure /etc/{{ haproxy_service }}/ directory exists
      file:
        path: /etc/{{ haproxy_service }}/
        state: directory

    - name: Render haproxy config
      template:
        dest: /etc/{{ haproxy_service }}/haproxy.cfg
        src: haproxy.cfg.j2
      register: template_haproxy_cfg

    - name: Setup and start {{ haproxy_service }} service
      include_role:
        name: haproxy_runc

    - name: Reload {{ haproxy_service }} service
      systemd:
        name: "{{ haproxy_service }}"
        state: reloaded
      when: template_haproxy_cfg is changed
