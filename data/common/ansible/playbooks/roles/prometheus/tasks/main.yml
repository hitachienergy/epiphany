---
- name: Get systemd version
  shell: systemctl --version | awk '$1 == "systemd" {print $2}'
  changed_when: false
  register: prometheus_systemd_version

- name: Set master exists flag
  set_fact:
    does_k8s_exist: "{{ (groups['kubernetes_master'] | default([]) | length > 0) or k8s_as_cloud_service }}"

- name: Configure kubernetes monitoring
  when: does_k8s_exist
  include_tasks:
    file: configure-k8s-apps-monitoring.yml
    apply:
      environment:
        KUBECONFIG: "{{ kubeconfig.local }}"

- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"

- name: "Check if Alertmanager is enabled"
  set_fact:
    is_alertmanager_enabled: "{{ specification.alertmanager.enable | bool and (specification.alertmanager.config.receivers | length>0 ) }}"

- name: Include install
  include_tasks: install.yml

- name: Include configure
  include_tasks: configure.yml

- name: Include tasks if Alertmanager is enabled
  block:
  - name: Include provide-rules 
    include_tasks: provide-rules.yml

  - name: Include install-alertmanager
    include_tasks: install-alertmanager.yml
  
  - name: Include configure-alertmanager
    include_tasks: configure-alertmanager.yml
  when: is_alertmanager_enabled | bool

- name: Flush handlers
  meta: flush_handlers

- name: Ensure Prometheus service is started and enabled
  systemd:
    name: prometheus
    state: started
    enabled: true

- name: Ensure alertmanager service is started and enabled
  systemd:
    name: alertmanager
    state: started
    enabled: true
  when: is_alertmanager_enabled
