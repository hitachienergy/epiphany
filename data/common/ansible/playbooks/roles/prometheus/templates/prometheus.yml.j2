#jinja2: trim_blocks: True, lstrip_blocks: True
# {{ ansible_managed }}
# http://prometheus.io/docs/operating/configuration/

global:
  scrape_interval: {{ specification.scrape_interval }} #15s
  scrape_timeout: {{ specification.scrape_timeout }} #10s
  evaluation_interval: {{ specification.evaluation_interval }}
  external_labels:
    {{ prometheus_external_labels | to_nice_yaml(indent=2) | indent(4, False) }}

{% if specification.remote_write != [] %}
remote_write:
  {{ specification.remote_write  }}
{% endif %}

{% if specification.remote_read != [] %}
remote_read:
  {{ specification.remote_read  }}
{% endif %}

rule_files:
  - {{ specification.config_directory }}/rules/*.rules

{% if is_alertmanager_enabled == True %}
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - '127.0.0.1:9093'
{% endif %}

scrape_configs:
  - job_name: "prometheus"
    metrics_path: "{{ specification.metrics_path }}"
    static_configs:
      - targets:
          - "{{ ansible_fqdn | default(ansible_host) | default('localhost') }}:9090"
  - job_name: "file_service_discovery"
    file_sd_configs:
      - files:
          - "{{ specification.config_directory }}/file_sd/*.yml"

{% if bearer_token is defined %}
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
    - role: endpoints
      api_server: "{{ api_server_address }}"
      tls_config:
        insecure_skip_verify: true
      bearer_token: "{{ bearer_token }}"
    tls_config:
      insecure_skip_verify: true
    bearer_token: "{{ bearer_token }}"
    scheme: https
    relabel_configs:
    - action: keep
      regex: default;kubernetes;https
      source_labels:
      - __meta_kubernetes_namespace
      - __meta_kubernetes_service_name
      - __meta_kubernetes_endpoint_port_name

# Scrape config for node exporters in "k8s as cloud service"

{% if k8s_as_cloud_service is defined and k8s_as_cloud_service %}
  - job_name: 'kubernetes-node-exporters'
    kubernetes_sd_configs:
    - role: endpoints
      api_server: "{{ api_server_address }}"
      tls_config:
        insecure_skip_verify: true
      bearer_token: "{{ bearer_token }}"
    tls_config:
      insecure_skip_verify: true
    bearer_token: "{{ bearer_token }}"
    relabel_configs:
    - source_labels: 
      - __meta_kubernetes_endpoints_name
      regex: 'node-exporter'
      action: keep
    - source_labels:
      - __meta_kubernetes_endpoint_node_name
      target_label: instance
{% endif %}

# Scrape config for nodes (kubelet).

  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
    - role: pod
      api_server: "{{ api_server_address }}"
      tls_config:
        insecure_skip_verify: true
      bearer_token: "{{ bearer_token }}"
    tls_config:
      insecure_skip_verify: true
    bearer_token: "{{ bearer_token }}"
    scheme: https
    relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scrape
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: kubernetes_pod_name

# Scrape config for Kubelet cAdvisor.

  - job_name: 'kubernetes-cadvisor'
    kubernetes_sd_configs:
    - role: node
      api_server: "{{ api_server_address }}"
      tls_config:
        insecure_skip_verify: true
      bearer_token: "{{ bearer_token }}"
    tls_config:
      insecure_skip_verify: true
    bearer_token: "{{ bearer_token }}"
    scheme: https
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __metrics_path__
        replacement: /metrics/cadvisor


  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
    - role: node
      api_server: "{{ api_server_address }}"
      tls_config:
        insecure_skip_verify: true
      bearer_token: "{{ bearer_token }}"

    tls_config:
      insecure_skip_verify: true
    bearer_token: "{{ bearer_token }}"

    scheme: https
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)


  - job_name: 'kubernetes-services'
    kubernetes_sd_configs:
    - role: service
      api_server: "{{ api_server_address }}"
      tls_config:
        insecure_skip_verify: true
      bearer_token: "{{ bearer_token }}"

    tls_config:
      insecure_skip_verify: true
    bearer_token: "{{ bearer_token }}"

    scheme: https
    metrics_path: /probe
    params:
      module:
      - http_2xx

    relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_probe
      - source_labels:
        - __address__
        target_label: __param_target
      - replacement: blackbox
        target_label: __address__
      - source_labels:
        - __param_target
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - source_labels:
        - __meta_kubernetes_service_name
        target_label: kubernetes_name


{% endif %}
