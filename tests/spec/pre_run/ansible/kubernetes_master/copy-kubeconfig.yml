# Serverspec tests require $HOME/.kube/config on kubernetes_master hosts.
# This playbook should only make changes that can be reverted.

- hosts: kubernetes_master
  gather_facts: false
  vars:
    undo_file_path: ~/.copy-kubeconfig-undo.yml
  tasks:
    - name: Assert kubeconfig_remote_path variable is defined
      assert:
        that: kubeconfig_remote_path is defined
        quiet: true

    - name: Get info on remote user
      setup:
        gather_subset: min
      become_user: "{{ ansible_user }}"
      become: true

    - name: Check if paths exist
      stat:
        path: "{{ item }}"
        get_attributes: false
        get_checksum: false
        get_mime: false
      register: stat_kubeconfig_paths
      loop:
        - "{{ ansible_facts.user_dir }}/.kube"
        - "{{ ansible_facts.user_dir }}/.kube/config"

    - name: Save initial state to file  # to undo changes
      when: not stat_kubeconfig_paths.results[0].stat.exists
         or not stat_kubeconfig_paths.results[1].stat.exists
      copy:
        dest: "{{ undo_file_path }}"
        mode: u=rw,g=r,o=
        content: |
          # This file is managed by Ansible and is needed to restore original state. DO NOT EDIT.
          {{ stat_kubeconfig_paths.results | json_query('[].{path: item, stat: stat}') | to_nice_yaml(indent=2) }}

    - name: Create ~/.kube directory
      when: not stat_kubeconfig_paths.results[0].stat.exists
      file:
        path: "{{ ansible_facts.user_dir }}/.kube"
        state: directory
        mode: u=rwx,go=

    - name: Copy kubeconfig file
      when: not stat_kubeconfig_paths.results[1].stat.exists
      become: true
      copy:
        src: "{{ kubeconfig_remote_path }}"
        dest: "{{ ansible_facts.user_dir }}/.kube/config"
        remote_src: true
        owner: "{{ ansible_facts.user_uid }}"
        group: "{{ ansible_facts.user_gid }}"
        mode: u=rw,go=
